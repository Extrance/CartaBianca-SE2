swagger: '2.0'
info:
  version: '1.0'
  title: "Exam-ify"
  description:  https://github.com/Extrance/CartaBianca-SE2.git<br>
                API description for SE2 project<br>
                
                <h2>/</h2><br>
                On main page user can find links to list of users, exams, tasks and groups<br>
                Methods:<ul>
                <li><b>get</b>()<ul>
                  <li> display links to /users, /exams, /groups, /tasks (everyone)
                  </ul>
                </ul>
                
                <h2>/users</h2><br>
                  On this page user can find a list of all users and view their profiles<br>
                  Methods:<ul>
                  <li><b>get()</b><ul>
                    <li>display the list of ID of all users of the website (everyone)
                    <li>display the list of ID, name and surname of all users of the website (logged in)
                    </ul>
                  <li><b>post(</b>user_name<b>,</b> user_surname<b>,</b> user_pw<b>)</b><ul>
                    <li>add a user to the system (logged in)
                    </ul>
                  </ul>
                
                
                <h2>/users/{id}</h2><br>
                  Page of a specific user with matricola={id}<br>
                  If a user not found, return 404 code<br>
                  Methods:<ul>
                  <li><b>get(</b>user_id<b>)</b><ul>
                    <li>display the ID of user (everyone)
                    <li>display ID, name, surname groups he’s a part of (logged in)
                    <li>display ID, name, surname, groups he’s a part of, exams to do, exams done with votes and comments (the page belongs to the logged in user)
                    </ul>
                  <li><b>delete(</b>user_id<b>)</b><ul>
                    <li>delete user (page belongs to the logged in user)
                    </ul>
                  </ul>
                
                <h2>/exams</h2><br>
                  Page of the exams subpage<br>
                  Methods:<ul>
                  <li><b>get()</b><ul>
                    <li>display the list of names of all exams of the website (everyone)
                    </ul>
                  <li><b>post(</b>user_id<b>,</b> exam_name<b>)</b><ul>
                    <li>create a new exam (logged in)
                    </ul>
                  </ul>
                
                <h2>/exams/{name}</h2><br>
                Page of a specific exam with name={name}, eventually be able to open the single tasks<br>
                If an exam not found, return 404 code<br>
                Methods:<ul>
                <li><b>get(</b>exam_name<b>,</b> user_id<b>)</b><ul>
                  <li>display the list of exercises (user that have to attend the exam)
                  </ul>
                <li><b>post(</b>exam_id<b>,</b> group_id<b>)</b><ul>
                  <li>assign the exam to a group (logged in)
                  </ul>
                <li><b>post(</b>exam_id<b>,</b> group_id<b>,</b> user_id[]<b>)</b><ul>
                  <li>decide who is gonna help with reviewing (who is using the exam)
                  </ul>
                <li><b>delete(</b>exam_id<b>,</b> user_id<b>)</b><ul>
                  <li>delete the exam (owner of the exam)
                  </ul>
                </ul><br>
                
                <h2>/groups</h2><br>
                Page of the groups subpage<br>
                Methods:<ul>
                <li><b>get()</b><ul>
                  <li>display the list of all groups
                  </ul>
                <li><b>post(</b>group_name<b>,</b> user_id[]<b>)</b><ul>
                  <li>create a new group (logged in)
                  </ul>
                </ul>
                
                <h2>/groups/{id}</h2><br>
                Page of a specific group with id={id}<br>
                If a group not found, return 404 code<br>
                Methods:<ul>
                <li><b>get(</b>group_id<b>,</b> user_id<b>)</b><ul>
                  <li>display the list of users of the group (logged in)
                  <li>display the list of users of the group, exams assigned (part of the group)
                  </ul>
                <li><b>post(</b>group_id<b>,</b> user_id[]<b>)</b><ul>
                  <li>add a user to the group (admin of the group)
                  <li>remove a user from the group (admin of the group)
                  </ul>
                <li><b>delete(</b>group_id<b>,</b> user_id<b>)</b><ul>
                  <li>delete the group (admin of the group)
                  </ul>
                </ul>
                
                <h2>/tasks</h2><br>
                Page of the tasks subpage<br>
                Methods:<ul>
                <li><b>get(</b>user_id<b>)</b><ul>
                  <li>display the list of all tasks (logged in)
                  </ul>
                <li><b>post(</b>user_id<b>,</b> task_description<b>,</b>task_options[]<b>)</b><ul>
                  <li>create a new task (logged in)
                  </ul>
                </ul>
                
                
                <h2>/task/{id}</h2><br>
                Page of a specific task with id={id}<br>
                If a task is not found, return 404 code<br>
                Methods:<ul>
                <li><b>get(</b>task_id<b>,</b> user_id<b>,</b> <i>token</i><b>)</b><ul>
                  <li>display the task (logged in)
                  <li>display options to answer (user that is taking an exam)
                  </ul>
                <li><b>post(</b>user_id<b>,</b> task_answer[]<b>)</b><ul>
                  <li>answer the task (user that is taking an exam)
                  </ul>
                </ul>
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
    
host: cartabiancase2-automatic.herokuapp.com