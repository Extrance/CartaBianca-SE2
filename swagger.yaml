swagger: '2.0'
info:
  description: 'Exam-ify: project for SE2 unitn course'
  version: 1.0.0
  title: Exam-ify
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: se2proj.docs.apiary.io
basePath: /
tags:
  - name: Mainpage
    description: Display Mainpage
  - name: Users
    description: Operations about users
  - name: Groups
    description: Operations about groups
  - name: Tasks
    description: Operations about tasks
  - name: Exams
    description: Operations about exams
    externalDocs:
      description: Find out more about our website
      url: 'http://swagger.io'
schemes:
  - https
  - http
paths:
  /:
    get:
      tags:
        - Mainpage
      summary: GET - Display Mainpage of the website
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '200':
          description: OK
        '405':
          description: Invalid input

  /users:
    get:
      tags:
        - Users
      summary: GET - Display list of users
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '200':
          description: OK
        '405':
          description: Invalid input
    post:
      tags:
        - Users
      summary: POST - Add a new user to the site
      description: ''
      operationId: addUser
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: User that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Users'
      responses:
        '200':
          description: OK
        '405':
          description: Invalid input
          
  '/users/{userId}':
    get:
      tags:
        - Users
      summary: GET - Display page of user by ID
      operationId: getUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
    post:
      tags:
        - Users
      summary: POST - Updates a user
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          description: ID of User that needs to be updated
          required: true
          type: integer
          format: int64
        - name: name
          in: formData
          description: Updated name of the user
          required: false
          type: string
        - name: surname
          in: formData
          description: Updated surname of the user
          required: false
          type: string
      responses:
        '200':
          description: successful operation
        '405':
          description: Invalid input
    delete:
      tags:
        - Users
      summary: DELETE - Deletes a user
      operationId: deleteUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: api_key
          in: header
          required: false
          type: string
        - name: userId
          in: path
          description: User id to delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
          
  /exams:
    get:
      tags:
        - Exams
      summary: GET - Returns list of exams
      operationId: getExams
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int32
    post:
      tags:
        - Exams
      summary: POST - Create a new exam
      operationId: createExam
      produces:
        - application/xml
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Exams'
        '400':
          description: Invalid Request
    delete:
      tags:
        - Exams
      summary: DELETE - Deletes an exam
      operationId: deleteExam
      produces:
        - application/xml
        - application/json
      parameters:
        - name: examId
          in: header
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Exam not found
  '/exams/{examId}':
    get:
      tags:
        - Exams
      summary: GET - Display page of exam by ID
      operationId: getExamById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: examId
          in: path
          description: ID of exam to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Exam not found
    post:
      tags:
        - Exams
      summary: POST - Updates an exam
      operationId: updateExam
      parameters:
        - name: examId
          in: path
          description: ID of Exam that needs to be updated
          required: true
          type: integer
          format: int64
        - name: name
          in: formData
          description: Updated name of the exam
          required: false
          type: string
        - name: formerId
          in: formData
          description: Updated former
          required: false
          type: string
        - name: grado
          in: formData
          description: Grado of former updated
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '405':
          description: Invalid input
  
  /groups:
    get:
      tags:
        - Groups
      summary: GET - Returns list of groups
      operationId: getGroups
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int32
    post:
      tags:
        - Groups
      summary: POST - Create a new group
      operationId: createGroup
      produces:
        - application/xml
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Groups'
        '400':
          description: Invalid Request
  
  
  
  

definitions:
  
  Users:
    type: object
    properties:
      userId:
        type: integer
        format: int64
      name:
        type: string
      surname:
        type: string
      password:
        type: string
    xml:
      name: Users
      
  Exams:
    type: object
    properties:
      examId:
        type: integer
        format: int64
      name:
        type: string
      creatorId:
        type: integer
        format: int64
    xml:
      name: Exams
      
  Tasks:
    type: object
    properties:
      taskId:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      answer:
        type: string
    xml:
      name: Tasks    
      
  Groups:
    type: object
    properties:
      groupId:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Groups
      
  Former:
    type: object
    properties:
      formerId:
        type: integer
        format: int64
      groupId:
        type: integer
        format: int64
      userId:
        type: integer
        format: int64
      grado:
        type: integer
    xml:
      name: Former
      
  ExamFormer:
    type: object
    properties:
      formerId:
        type: integer
        format: int64
      examId:
        type: integer
        format: int64
      taskId:
        type: integer
        format: int64
    xml:
      name: Former
      
  Assignment:
    type: object
    properties:
      assignmentId:
        type: integer
        format: int64
      groupId:
        type: integer
        format: int64
      examId:
        type: integer
        format: int64
      mark:
        type: integer
        format: int64
    xml:
      name: Former
      
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'